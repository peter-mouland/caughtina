extends ../layout

block mainContent

    include ../partials/profile

    #article
        h1 Useful front-end code
            small [draft copy!]
        .wrapper
            section
                h2 Mission
                p I want to expose the common problems and frustrations associated with front-end development.
                    | Along with these I will give sollutions and best practises in order to get around the issues or to avoid them all together.

                p.listStatement In this post i will concentrate on the following topics;
                dl.contentList
                    dt document flow:
                    dd pro's and con's of display types, float and overflow
                    dt css3:
                    dd when to use css3 or to stick with images
                    dt transitions:
                    dd css3 support and JS fallback
                    dt javascript
                    dd jQuery pitfalls and testing
                    dt devices:
                    dd responsive design and media queries
                    dt accessiblity:
                    dd what ARIA is and how to structure your document to make sense for <abbr title="Assistive Technologies">AT's</abbr>

                h2 target design
                p To help put the theory into practise I will be building a tabbed document.
                    | A tab will show a set of four articles, each containing an image, logo, title, tag-line and a button.

                p The end product should look the same in all browsers from IE6 to IE9 as well as Firefox 3.6 and the latest versons for Firefox (v15), chrome (v21), safari (v6) and Opera (v12).

                figure
                    img(src='/images/articles/useful-front-end.JPG')
                    figcaption The final product, a tabbed document looking pretty.


                h2 layout decisions
                p The first thing to do is to build all the HTML that is needed, forget styling, right now we need to get the structure right.
                    | If the document makes sense un-styled, it is likely to make sense to a screen-reader too.
                p When it comes to styling, ensure that the user never sees a flash of unstyled content (FOUC)<sup><a href="#sources">[1]</a></sup>.
                    | This means never rely on JavaScript to help with the layout.
                    | Not because 'non-JS' users wont appreciate it, but because waiting for <code>$(document).ready</code> takes too long.
                P If there is something which needs Javascript (e.g. feature-detection to help with some complicated styling),
                    | then either <code>gracefully fallback</code> or <code>progressively enhancement</code> the user experience.
                    | Which one will depend on you.  Do you choose to code for the browser most commonly used on your site, or the latest and greatest browser that was just released.
                    | As long as the most popular browser still looks awesome, works as intended and is fast it shouldn't matter too much.
                P
                    | Being able align items with each other, as in the designs, is also important to get right.
                    | The designs rarely cover all possibilities so you must choose which allignments are most important.
                    | Although this shouldn't affect your HTML structure, it may mean an extra div or two to help contain elements.
                    | These elements can then be moved on the page as a group using <code>float</code> or <code>position: absolute</code>.

                h3 the tabs
                ul
                   li structure of code (li's of headers containing articles of information)
                   li to get them next to each other
                   li inline: cant set height or width, so how to get around that?  (padding, or use a block element inside)
                   li inline-block: not cross browser compatible
                   li block: takes full width (so float left but now the container doesnt know its there)
                   li gradient: image or css? (css as most browsers support this and isnt too bad if an old brwoser cant see it)
                   li drop-shadow: image or css? (image as looks really bad in older browsers if it isn't there)

                h3 tab content
                ul
                    li does each tab have a heading and why does it matter?
                    li image as tag or sprite?
                    li icons as image tags or spries?
                    li how to get everything lined up?

                h3 tab switching
                ul
                    li attach events to each li or tab container?
                    li js debug
                    li how to hide the ther tabs
                    li display: none     (not on the page. old ie has trouble getting height and widths in js)
                    li visibility:hidden (still in document flow but not shown)
                    li transitions?

                h3 tracking user interaction
                ul
                    li what info should be sent?
                    li

                h3 device support
                ul
                    li responsive design
                    li tap event
                    li orientation change
                    li media queries

                h3 accessibility
                ul
                    li screen reader support (aria, live regions and structure)
                    li keyboard support


