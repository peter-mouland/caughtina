extends ../layout

block mainContent
    #article
        h1 using html5 in production
        .wrapper
            section
                h2 the mission
                p Recenlty I have been looking into using html5 markup and seeing what is required to get it through to a production site.
                    | The sites I tend to build have to be fully functional down to IE6, this is due to the number of people using the site during work hours trapped behind the corporate build.
                p So when going as far as saying non-javascript users are also important, this adds a new level of challange; how to get IE6 to play nicely without JS?
                    | I'm not one to bash an old foe when he's down and almost out, but IE did give me problems.
                    | I wasn't expecting miricles, but after noting that even Firefox 3 (released June 2008) implemented some HTML5 features[1], i had hope.

            section
                h2 the methods
                p The following all had their drawbacks, but given the right circumstance and a less strict set of requirements, any of them could be used to solve the problem.
                dl
                    dt pollyfil js
                    dd I'm not a fan of copying a whole library into production code to solve what are potentially small problems, but they can be worth a look.
                        | If no-JS wasn't a requirement, this might have been an option, so out of curiosity - i took a look anyway!
                        | I'm not going to compare and contrast libraries in detail here.  All i'm interested in whether or not they did the job i needed them to do.
                        | So at this point i want them to have a small footprint, be non-invasive and get a small number of html5 features[2] to work in all common browsers[3].
                        h3
                            a(href:'http://modernizr.com/',target:'_new') modernizr
                        p after loving the configurable download screen i got down to business.  After choosing my features, the custom file came in at 4kb, not bad.
                        h3
                            a(href:'http://ajaxian.com/archives/enhancejs') enhanceJS
                        p will look

                        h3 feature detection
                        p with this excellent little JS snippet[4] and
                            code.css display:block
                            | we are able to get HTML5 tags to render in all browsers.
                            code.complete 'article aside footer header nav section time'.replace(/w+/g,function(n){document.createElement(n)})
                        p CSS3 features will either have to be rendered using small amounts of js or fallback methods within the CSS itself.
                        p
                            code.css Opacicity
                            | (including
                            code.css rgba
                            |) and gradients don't require JS at all.
                            | If the overflow bug[5] in IE doesn't get in your way then you can use
                            code.css filter
                            | for IE and vender prefixes for all the other browsers
                        p
                            code.css border-radius
                            | can normally be ignored all together as it is already supported by modern browsers.
                            | those that don't support it (IE6 + IE7)[6] can simply have square corners.
                        p
                            code.css columns
                            | depends on your desired layout.
                            | to get columns to work in all browsers, I'd prefer not to change the markup.
                            | unortunately adding more tags will be neccersary to replicate the column look in the old browsers (IE and FF3.6).
                        p
                            code.css text-shadow
                            | can only be replicated with the help of JS by cloning the text and ofsetting the result.
                            | But because screen readers would also announce any duplicated text[7] I'd reccomend either letting old browsers render without it or using the
                            code.html img
                            | tag as fallback with good 'alt' text.
                        p
                            code.css transition
                            |


                    dt conditional statements
                    dd a strange idea, but one that would work if you are really keen to get IE to place nicely without JS.
                        | Not that i would ever recommend this method but i do like outside-the-box thinking behind it.
                        | For me it is simply too untidy and it duplicates too much code which is made worse by the act that it is client side code to ever be a serious contender.

                    dt extra 'containers'
                    dd This method wraps each HTML5 tag in its own container and in order for any css associated with the element from the
                        code.html id
                        |or
                        code.html class
                        |to be rendered in IE6.


            h2 the execution
            p I've kept all my ARIA attributes on the HTML5 tags themselves.  This is so that in the future, when more AT's do understand the purpose of each tag, items/announcements to the user are not duplicated.
                |I dont really want my new div container to seem like a navigation item to AT when its first child is also a navigation item!

            h2 the reflection
            p HTML5 can be used today in all browsers that are widely used today [1], even without JS, whoop whoop!


            p It a shame though that the spec states that some elements are for styling only [1].
                | I was hoping for the aim to be higher, for these styling elements have gone down in writing as aiming to assist AT when possible.
                | It is rare that developers will allow the browser to pick a style that can not be altered.
                | It is rarer still that a business would accept elements on their sites that dont match their own style-guide.

            ul
                li [1] firefox 3 html 5 - https://developer.mozilla.org/en/Firefox_3_for_developers
                li [2] the layout tags (header, hgroup, nav, section, article, footer) and fontface, border-radius, opacity, rgba, text-shadow, columns, gradients, transitions and touch.
                li [3] IE6, IE7, IE8, IE9, FF3.6, FF14, Opera, Chrome, Safari
                li [4] http://www.hagenburger.net/BLOG/Simple-HTML5-Fix-for-IE.html
                li [5] elements with 'filter' css will always have their overflow hidden.
                li [6] css3 support tests + results
                li [7] no way of hidding text from screen readers at the moment
                li [n] http://nefariousdesigns.co.uk/sniff-my-browser-the-modernizr-inadequacy.html
                li [n] http://www.css3files.com/2011/06/07/why-i-don%E2%80%99t-use-modernizr-yet/

        a.button(href="#")
            span.pretty
            span.text button
        hr
        span.button
            span.pretty
            input.text(type="submit",value="button")

    | <!--| Performance of coarse is also a factor as adding too many elements to the DOM, or executing too much JS needlessly may be too much for some browser/operating system/hardware clients.-->

    |<!--h2 considerations-->
    |<!--p If this edge case is a small percentage, then why bother?-->
    |    <!--| Simple, because even a small percentage of return visitors would turn into a large number missing clicks if we didnt provide a good looking, usable site.-->
    |    <!--| Having said that, I'll still be more than happy when the people above decide that this number is small enough to be ignored!-->
    |    <!--| The other reason is accessibility.  Doing what we can to help Assistive technology (AT) will in turn help more users.-->
    |    <!--| I'm sure more AT's will suport these semantic descriptive tags in the future.-->
    |    <!--| I also expect html5 to help Search Engine Optimisation (SEO), maybe not hugely important now, but hopefully soon.-->