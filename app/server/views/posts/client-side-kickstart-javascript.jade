extends layout

block mainContent

    section
        <a name="javascript"></a>
        h2 Javascript
        h3 when to add JS
        P When adding javascript (e.g. for changing tabs), ensure that the initial look of the page does not rely on it.
            | this is to help prevent a flash of unstyled content.
            | Without any script on your page, ensure the look and feel is perfect.
            | using something like the following little block, then make sure a 'no script' page is functional.
            code(class="complete")
                &lt;body class=' noscript '><br/>
                &lt;script>document.body.className=document.body.className.replace(/noscript/,'');&lt;/script>
            | this will allow you to customise the non-javascript view with a few more CSS rules and prepending <code class="css">body.noscript</code> to the start of them.
            | lastly, use js to update the functionality.

        h3 jQuery
        p clearly an awesome library, but I find that what is happening in the scenes is often forgotten about.
            | we must not forget that this is a client side library, simply wrapping javascript up into neat little cross-browser compatible functions.
            | it has bugs, especially the older versions.
            | but most importantly, this is client-side scripting which means slow out of date computers should be kept in mind.

        p when using jquery within a page which has many DOM elements, dont forget that nesting loops are bad.
            | performance matters so do what you can to limit loops around the DOM and maximise saving the DOM into variables.
            | getting javascript to return you an element once will always be faster than doing 10 times!
            | modern browsers are much better at handling these types of requests, but be sure there is no other (faster) way before using
            code.js .parents()
            | or
            code.js .has()
            | etc

        h3 testing
        p gone are the days of encapsulation and private self executing functions.
            | in the past I have used the following to keep my code safe; but impossible to test.
            code(class="complete")
              |  (function(){ ...
              |  }());

        p it is now all about public code that can be mocked and changed by your tests at will.
            code(class="complete")
                |  var namespace = {};<br/>
                |  namespace.buildMyStuff = function(){ ... };<br/>
                |  namespace.buildMyStuff.prototype = { ... };<br/>
                |  var localStuff = new namespace.buildMyStuff();

        p currently <a href="http://code.google.com/p/js-test-driver/" target="_blank">JSTestDriver</a> is fullfilling all my needs
            | and I recomend it as cross-browser functionality and its integration with IntelliJ is superb.


        h3 tab switching
        ul
            li attach events to each li or tab container?
            li js debug
            li how to hide the ther tabs
            li display: none     (not on the page. old ie has trouble getting height and widths in js)
            li visibility:hidden (still in document flow but not shown)
            li transitions?
