[
    {   pageType: 'post',
        url: '/posts/using-html5-in-production',
        title:'using html5 in production',
        isDraft: false,
        published:'2012-07-16',
        updated:'2012-09-20',
        author:'peter-mouland',
        summary:'I\'ve seen many people question html5. Some say \'why bother, there\'s not enough support\'. Others saying \'just use it as no one should be using IE anyway\'!',
        body:'<section><h2>Mission</h2><p>Recently I have been looking into using html5 markup and seeing what is required to get it through to a live.' +
'The sites I tend to build have to be fully functional down to IE6, this is due to the number of people using the site trapped behind an old corporate build.</p><p>So when going as far as saying non-javascript users are also important, this adds a new level of challange; how to get IE6 to play nicely without JS? ' +
'I\'m not one to bash an old foe when he\'s down and almost out, but IE did give me problems.     ' +
'I wasn\'t expecting miricles, but after noting that even Firefox 3 (released June 2008) implemented some HTML5 features<sup><a href="#sources">[1]</a></sup>, I had hope.</p></section><section><h2>Methods</h2><p>The following all had their draw-backs, but given the right circumstance and a less strict set of requirements, any of them could be used to solve the problem.</p><dl><dt>Conditional Statements</dt><dd><p>I thought this was a strange idea, but one that would work if you are really keen to get IE to play nicely without JS. ' +
'The idea is to only let IE render the tags it understands depending on its version number.</p><code class="html complete">&lt;!--[if lt IE 9]&gt;&lt;div class=\'section\'&gt;&lt;![endif]--&gt;<br>    ' +
'&lt;!--[if gt IE 8]&gt;&lt;section class=\'section\'&gt;&lt;![endif]--&gt;<br>       ' +
'&lt;!--[if !IE]&gt;&lt;section class=\'section\'&gt;&lt;![endif]--&gt;<br>  ' +
'...<br> ' +
'&lt;!--[if lt IE 9]&gt;&lt;/div&gt;&lt;![endif]--&gt;<br>' +
'&lt;!--[if gt IE 8]&gt;&lt;/section&gt;&lt;![endif]--&gt;<br>' +
'&lt;!--[if !IE]&gt;&lt;/section&gt;&lt;![endif]--&gt;</code><p>For me, this method simply duplicates too much client side code to ever be a serious contender. ' +
'It also means that we completely lose the HTML 5 tags + their semantic meaning for older versions of IE. ' +
'But I do like outside-the-box thinking behind it!</p></dd><dt>HTML5 Containers</dt><dd><p>This method wraps each HTML5 tag in its own container with a descriptive<code class="html">class</code>. The idea here is to never actually attempt to style or do anything with the HTML5 tags. Instead we just get the browser to style the containers.</p><code class="html complete">&lt;div class=\'section\'&gt;<br>   ' +
'&lt;section&gt;<br>    ' +
'...<br>         ' +
'&lt;/section&gt;  ' +
'&lt;/div&gt;<br></code><p>We do end up with more elements in the DOM than I would like, but we also get the semantic benefit of the HTML5 tags.  ' +
'All this without JavaScript.</p></dd><dt>Pollyfil JS</dt><dd><p>I\'m not a fan of copying a whole library into production code to solve what are potentially small problems, but they are worth a look.  ' +
'If no-JS wasn\'t a requirement, this might have been an option, so out of curiosity - I took a look anyway.   ' +
'I\'m not going to compare and contrast libraries in detail here.</p><p>As CSS3 features is not my goal here, just a small number of html5 features<sup><a href="#sources">[2]</a></sup> working in all common browsers<sup><a href="#sources">[3]</a></sup>, I am moving past&nbsp;<a href="http://modernizr.com/" target="_new">modernizr</a>,&nbsp;<a href="http://css3pie.com/" target="_new">CSS3Pie</a> and a whole raft of&nbsp;<a href="https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills" taret="_new">other sollutions availble for non-structural HTML5 tags</a> and straight onto&nbsp;<a href="https://github.com/aFarkas/html5shiv" target="_new">HTML5Shiv</a> (which is at the source of Modernizr).</p><p>A quick look at the source for this shim shows how little code is needed to get browsers to style unknown tags.   ' +
'Even going as far as ensuring printing a HTML5 page works.  ' +
'Along with this, it also replicates a javascript function (<code class="js">createDocumentFragment</code>), which could be very useful.</p><p>As it turns out, all I needed in the way of JavaScript was this excellent little snippet<sup><a href="#sources">[4]</a></sup> and along with the CSS<code class="css">display:block</code>we are able to get HTML5 tags to render in all browsers.<code class="js complete">\'article aside footer header nav section time\'.replace(/w+/g,function(n){document.createElement(n)})</code></p></dd></dl></section><section><h2>Conclusion</h2><p>HTML5 can be used today in all browsers that are widely used today<sup><a href="#sources">[5]</a></sup>, even without <abbr title="Javascript">JS</abbr>!</p><p>It a shame though that the HTML5 spec states that some elements are primarily for styling<sup><a href="#sources">[6]</a></sup>.' +
'I was hoping for the aim to be higher, to allow code to be more descriptive and give AT\'s more of a helping hand.' +
'It is rare that developers will allow the browser to pick a style that can not be altered.' +
'It is rarer still that a business would accept elements on their sites that don\'t match their own style-guide.</p><p> Overall, the semantic benifits these tags give will help future proof our sites as well as aiding <abbr title="Assistive Technology">AT</abbr>\'s.' +
'For me, this makes the extra effort worth it.</p></section><section><h2>Other Notes</h2><p>When implementing my sollution, I decided to keep all my <abbr title="Accessible Rich Internet Application">ARIA</abbr> attributes on the HTML5 tags themselves.   ' +
'This is so that in the future, when more <abbr title="Assistive Technology">AT</abbr>\'s do understand the purpose of each tag, the announcements made by screen readers are not duplicated.</p></section><section><h2><a name="sources">References</a></h2><ul class="references"><li><a href="https://developer.mozilla.org/en/Firefox_3_for_developers" target="_new">New developer features in Firefox 3</a></li><li>HTML5 tags to be rendered are header, hgroup, nav, section, article, aside and footer.</li><li>Browsers chosen as being either important or popular IE6, IE7, IE8, IE9, FF3.6, FF15, Opera, Chrome, Safari.</li><li><a href="http://www.hagenburger.net/BLOG/Simple-HTML5-Fix-for-IE.html" target="_new">A Simple HTML5 Fix for IE</a></li><li><a href="http://gs.statcounter.com/#browser_version_partially_combined-ww-yearly-2012-2012-bar">Browser usage statistics for 2012</a></li><li><a href="http://www.w3.org/wiki/HTML/Elements/input/search">Example of an HTML5 element which is used primarily for styling</a></li></ul></section>' +
'',
        tags:[ 'Accessibility','HTML5' ]
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart',
        title:'a client side kickstart',
        subtitle:'introduction',
        isDraft: false,
        published:'2012-08-16',
        updated:'2012-08-26',
        author:'peter-mouland',
        summary:'I\'ve been asked to put together some training notes for server-side developers to help them tackle common client-side problems. So here is my attempt!',
        body:'<section><h2>Mission</h2><p>I want to explain some common problems and frustrations associated with client-side development. '+
'I started writing this as a single post, with a couple of quick tips, but as the post got longer it made sense to split it.</p><h3>Target Design</h3><p>To help put the theory into practise I will be building a tabbed document.'+
'Each tab will show a set of four articles, each containing an image, logo, title, tag-line and a button.</p><p>The end product should look the same in all browsers from IE6 to IE9 as well as Firefox 3.6 and the latest versons for Firefox (v15), chrome (v21), safari (v6) and Opera (v12).</p><figure><img src="/images/articles/useful-front-end.JPG"><figcaption>The final product, a tabbed document looking pretty.</figcaption></figure><h3>approach</h3><p class="listStatement">Below are the other posts in this mini-series, in order of how I approach most jobs;</p><dl class="contentList"><dt><a href="/posts/client-side-kickstart-design-to-web">part 1 - design to web</a>:</dt><dd>some things that designs don\'t show you</dd><dt><a href="/posts/client-side-kickstart-document-flow">part 2 - document flow</a>:</dt><dd>how to structure the html and the effects of display types</dd><dt><a href="/posts/client-side-kickstart-css3">part 3 - css3</a>:</dt><dd>when to use css3 or stick to images</dd><dt><a href="/posts/client-side-kickstart-ui">part 4 : ui</a>:</dt><dd>css3 support and JS fallback</dd><dt><a href="/posts/client-side-kickstart-javascript">part 5 : javascript</a>:</dt><dd>jQuery pitfalls and testing</dd><dt><a href="/posts/client-side-kickstart-devices">part 6 : devices</a>:</dt><dd>responsive design and media queries</dd><dt><a href="/posts/client-side-kickstart-tracking">part 7 : tracking</a>:</dt><dd>what ARIA is and how to structure your document so <abbr title="Assistive Technologies">AT\'s</abbr> can make sense of it</dd></dl></section>'+
'',
        tags:['Accessibility','CSS' ]
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart-design-to-web',
        title:'a client side kickstart',
        subtitle:'part 1 - design to web',
        isDraft: false,
        published:'2012-08-30',
        updated:'2012-09-26',
        author:'peter-mouland',
        summary:'the first of 7 posts looking into kick-starting client-side development. here I look into what to think about when you see a design that needs to be turned into a web page',
        body:'<section><h2>From design to web</h2><h3>designs are great</h3><p>often looking awesome on their printed A3 sheets, designs are great. ' +
'unfortunately the web is not a piece of paper and our printers (the browser) are in the hand of the user. ' +
'this allows any variation of size and colours to be seen.</p><p>this is part of the reason why I dont use tools like <code>pixel perfect</code>. ' +
'what might look perfect in one browser, may look completely different in another. ' +
'there is a better way. go and speak to the designer and ask for his annotations. ' +
'learn the thinking behind their madness and use this to help guide you when things don\'t go to plan.</p><h3>UI</h3><p>designs often miss what happens when a user interacts with the elements. ' +
'has the design included the look and feel for <code>hover</code> and <code>focus</code> states? ' +
'the transitions that the user should shee when moving from one state to another will also be missing. ' +
'In my example above this will be when the suer changes tabs.</p><p>transitions take a little time to get right as its all about feel.  How long should it take, should it animate or fade etc</p><h3>catching the unexpected</h3><p>everything looks cool in the design, but what does it look like if a channel logo is missing. ' +
'can you ensure all images will be the same height? ' +
'if not, what do you do; crop the image somewhere or allow the images to be different and set a <code class="css">max-height</code>?</p><p>In the design above I have intentionally  shown how the tabs look when there is too much text, ' +
'but this too would normally be missing from the initial design and needs to be thought about.</p><h3>alligning page elements is good</h3><p>Being able align items with each other is important. ' +
'as you switch tabs in this design, the elements within the tabs should stay in the same position. ' +
'I.e. the channel logo\'s should always be in the same position, as should the call-to-action at the bottom. ' +
'if any matching elements move by even a pixel, this will look strange and buggy to the user.</p></section>',
        tags:['Accessibility','CSS']
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart-document-flow',
        title:'a client side kickstart',
        subtitle:'part 2 - document flow',
        isDraft: false,
        published:'2012-09-10',
        updated:'2012-09-26',
        author:'peter-mouland',
        summary:'draft copy!',
        body:'<section><h2 >document flow</h2><p >think how you would structure the code, most tags can be made to look and act like each other, so don\'t start to think about styling befosre the structure is done.'+
'If the document makes sense un-styled, it is likely to make sense to a screen-reader too.</p><p>When it does come to styling, ensure that the user never sees a flash of unstyled content (FOUC)<sup><a href="#sources">[1]</a></sup>.'+
'This means never rely on JavaScript to help with the layout.'+
'waiting for javascript to execute (especially when enclosed within a <code class="js">$(document).ready</code>) simply takes too long.</p><dl draggable="true"><dt>how would you structure the code?</dt><dd class="hide">use <code class="html">li</code>\'s containing <code class="html">h</code> tags for the tabs.'+
'the tab contents should be another list, but should the article titles for <code class="html">h</code> tags also?'+
'there is an arguement for this as titles are clearly headers, but think about a AT user pressing their \'h\' key to skip along all headers on the page.'+
'I think making the titles also headers would be too much, best to leave them out.</dd><dt>How would you get the tabs to sit nicely next to each other?</dt><dd class="hide">the following display types could be used<ul><li>inline: the downside here is that you cant set height or width. To get around that you could rely on a block element inside to force a min width and height.'+
'You could also use padding (IE will add font-size to the height even with no text inside<sup><a href="#sources">[2]</a></sup>)</li><li>inline-block: This will allow height and width to be set on an but it is not fully cross browser compatible<sup><a href="#sources">[3]</a></sup></li><li>block: These elements will take full width of the screen, so <code class="css">float:left</code> will also have to be used.</li><li>position:absolute : put the element where ever you want, but now you have to specifiy a place for each tab.'+
'This should be used last as its not very scaleable and elements are taken out of the document flow.'+
'This means more work is still needed to ensure the rest of the page renders as expected with no overlaps.</li></ul></dd><dt>How to layout the tabs content?</dt><dd class="hide">as the content of each tab starts in the same position, position:absolute has to be used here.'+
'as the question suggest, this is tab content, as it belongs in the same LI as the tab header.</dd></dl></section>'
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart-css3',
        title:'a client side kickstart',
        subtitle:'part 3 - css3',
        body: '<section><h2>CSS3</h2><p>a buzzword that is on many CV\'s at the moment.  It does include  some very nice things like gradients and rounded-corners.' +
'sometimes a given design will make these things more than nice, and essential to useability.' +
'it is when this line is crossed when the CSS approach has to be abandoned and bad old images should be used once again.' +
'our tabs example includes both, \'nice to have\' and \'cant-live-without\' effects.</p>' +
'<h3>gradients</h3>' +
'<p>there is a way to get all browsers to render a gradient in CSS, although in some browsers this can have some nasty side affects.</p>' +
'<p>when using <code>filter</code> within IE, custom text within that element will have \'true-type\' sudennly turned off.' +
'filters will also cause <code class="css">overflow</code> to misbehave.</p>' +
'<p>using the svg method (for ie9) as this causes problems in an safari 4<sup><a href="#sources">[6]</a></sup> and if kept within a conditional will not render for ie9 in a different document mode<sup><a href="#sources">[7]</a></sup></p>' +
'<p>Using images for gradients normally involve partially transparent .png\'s which are relatively large image files. ignoring that not all browsers support png-24s<sup><a href="#sources">[4]</a></sup>, <sup><a href="#sources">[5]</a></sup>. ' +
'be sure not use them</p>' +
'<h3>drop-shadows</h3>' +
'<p>as <code class="css">drop-shadow</code> isn\'t support by all browsers we really need to understand the use of the drop-shadow I.e. is it important?' +
'in our case above, I would say it is.  without it, the \'white\' select tab would probably just look broken.</p>' +
'<p><code class="css">Opacicity</code>(including<code class="css">rgba</code>) and gradients don\'t require JS at all.' +
'If the overflow bug[5] in IE doesn\'t get in your way then you can use<code class="css">filter</code>for IE and vender prefixes for all the other browsers</p>' +
'<p><code class="css">border-radius</code>can normally be ignored all together as it is already supported by modern browsers.  those that don\'t support it (IE6 + IE7)[6] can simply have square corners.</p>' +
'<p><code class="css">columns</code>depends on your desired layout. to get columns to work in all browsers, I\'d prefer not to change the markup. ' +
'unortunately adding more tags will be neccersary to replicate the column look in the old browsers (IE and FF3.6).</p>' +
'<p><code class="css">text-shadow</code>can only be replicated with the help of JS by cloning the text and ofsetting the result. ' +
'But because screen readers would also announce any duplicated text[7] I\'d reccomend either letting old browsers render without it or using the<code class="html">img</code>tag as fallback with good \'alt\' text.</p>' +
'<p><code class="css">transition</code>|</p>' +
'<ul>' +
'<li>[1] firefox 3 html 5 - https://developer.mozilla.org/en/Firefox_3_for_developers</li>' +
'<li>[2] the layout tags (header, hgroup, nav, section, article, footer) and fontface, border-radius, opacity, rgba, text-shadow, columns, gradients, transitions and touch.</li>' +
'<li>[3] IE6, IE7, IE8, IE9, FF3.6, FF14, Opera, Chrome, Safari</li>' +
'<li>[4] http://www.hagenburger.net/BLOG/Simple-HTML5-Fix-for-IE.html</li>' +
'<li>[5] elements with \'filter\' css will always have their overflow hidden.</li>' +
'<li>[6] css3 support tests + results</li>' +
'<li>[7] no way of hidding text from screen readers at the moment</li>' +
'<li>[n] http://nefariousdesigns.co.uk/sniff-my-browser-the-modernizr-inadequacy.html</li>' +
'<li>[n] http://www.css3files.com/2011/06/07/why-i-don%E2%80%99t-use-modernizr-yet/</li>' +
'</ul>' +
'</div>' +
'</div><p>Performance of coarse is also a factor as adding too many elements to the DOM, or executing too much JS needlessly may be too much for some browser/operating system/hardware clients.-->' +
'<h2> considerations' +
'<p> If this edge case is a small percentage, then why bother. ' +
'Simple, because even a small percentage of return visitors would turn into a large number missing clicks if we didnt provide a good looking, usable site.' +
' Having said that, I\'ll still be more than happy when the people above decide that this number is small enough to be ignored!' +
' The other reason is accessibility.  Doing what we can to help Assistive technology (AT) will in turn help more users.' +
' I\'m sure more AT\'s will suport these semantic descriptive tags in the future.' +
' I also expect html5 to help Search Engine Optimisation (SEO), maybe not hugely important now, but hopefully soon.</section>',
        author:'peter-mouland'
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart-ui',
        title:'a client side kickstart',
        subtitle:'part 4 : ui',
        body: '<section><a name="transitions"></a><h2>UI</h2><p>ui start</p></section>',
        author:'peter-mouland'
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart-javascript',
        title:'a client side kickstart',
        subtitle:'part 5 : javascript',
        body: '<section><h2>Javascript</h2>' +
'<h3>when to add JS</h3>' +
'<P>When adding javascript (e.g. for changing tabs), ensure that the initial look of the page does not rely on it.' +
'this is to help prevent a flash of unstyled content.' +
'Without any script on your page, ensure the look and feel is perfect.' +
'using something like the following little block, then make sure a \'no script\' page is functional.<code class="complete">' +
'&lt;body class=\' noscript \'><br/>' +
'&lt;script>document.body.className=document.body.className.replace(/noscript/,\'\');&lt;/script></code>this will allow you to customise the non-javascript view with a few more CSS rules and prepending <code class="css">body.noscript</code> to the start of them. ' +
'lastly, use js to update the functionality.</P>' +
'<h3>jQuery</h3>' +
'<p>clearly an awesome library, but I find that what is happening in the scenes is often forgotten about.' +
'we must not forget that this is a client side library, simply wrapping javascript up into neat little cross-browser compatible functions.' +
'it has bugs, especially the older versions.' +
'but most importantly, this is client-side scripting which means slow out of date computers should be kept in mind.</p>' +
'<p>when using jquery within a page which has many DOM elements, dont forget that nesting loops are bad.' +
'performance matters so do what you can to limit loops around the DOM and maximise saving the DOM into variables.' +
'getting javascript to return you an element once will always be faster than doing 10 times!' +
'modern browsers are much better at handling these types of requests, but be sure there is no other (faster) way before using<code class="js">.parents()</code>or<code class="js">.has()</code>etc</p>' +
'<h3>testing</h3>' +
'<p>gone are the days of encapsulation and private self executing functions.' +
'in the past I have used the following to keep my code safe; but impossible to test.<code class="complete">' +
'(function(){ ...' +
'           }());</code></p>' +
'<p>it is now all about public code that can be mocked and changed by your tests at will.<code class="complete">' +
'var namespace = {};<br/>' +
'namespace.buildMyStuff = function(){ ... };<br/>' +
'namespace.buildMyStuff.prototype = { ... };<br/>' +
'var localStuff = new namespace.buildMyStuff();</code></p>' +
'<p>currently <a href="http://code.google.com/p/js-test-driver/" target="_blank">JSTestDriver</a> is fullfilling all my needs and I recomend it as cross-browser functionality and its integration with IntelliJ is superb.</p>' +
'<h3>tab switching</h3>' +
'<ul>' +
'<li>attach events to each li or tab container?</li>' +
'<li>js debug</li>' +
'<li>how to hide the ther tabs</li>' +
'<li>display: none     (not on the page. old ie has trouble getting height and widths in js)</li>' +
'<li>visibility:hidden (still in document flow but not shown)</li>' +
'<li>transitions?</li>' +
'</ul></section>',
        author:'peter-mouland'
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart-devices',
        title:'a client side kickstart',
        subtitle:'part 6 : devices',
        summary: 'Buzz word of warning, this is about developing one site that fits on many screens - using responsive design.'
        author:'peter-mouland',
        tags: ['usability','css3','javascript']
    },
    {   pageType: 'post',
        url:'/posts/client-side-kickstart-tracking',
        title:'a client side kickstart',
        subtitle:'part 7 : tracking',
        author:'peter-mouland'
    }
]